import { HttpClient } from '@angular/common/http';
import { QrInfo } from './../../models/TableInfo.model';
import { Observable } from 'rxjs';
import { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';
import { Injectable } from '@angular/core';
import { NgForm } from '@angular/forms';
import { TableInfo } from 'src/models/TableInfo.model';
import { ToastrService } from 'ngx-toastr';
import { tap } from 'rxjs/operators';
import { NgxSpinnerService } from 'ngx-spinner';

@Injectable({
  providedIn: 'root'
})
export class QrService {
  QrFormData: QrInfo;
  private TableCollection: AngularFirestoreCollection<TableInfo>
  MyTable: Observable<TableInfo[]>
  uri = "https://us-central1-crowdconnect2.cloudfunctions.net/app/api";

  constructor(private http: HttpClient,
    private fireDb: AngularFirestore,
    private spinner: NgxSpinnerService,
    private toast: ToastrService) { }


  httpCreateTable(TableForm: NgForm){
    //create a linkgenerator with random id generated by the backend
    // return this.http.post(`${this.uri}/table`, TableForm.value)
    // this.fireDb.collection('Link_Generator_QR/Raw_Links/')
  }
  async httpSignIn(signInForm: NgForm) {
    return await this.http.post(`${this.uri}/signIn`, signInForm.value)
      .pipe(
        tap(token => {
          console.log(token)
        })
      )
  }
  // Just a success toast 
  SuccessToast(Title: any, Text: any) {
    this.toast.success(Text, Title, {
      timeOut: 3000
    });
  }
  // Just a failed toast 
  FailedToast(Title: any, Text: any) {
    this.toast.warning(Text, Title, {
      timeOut: 3000
    });

  }
  CreateSpinner(){
    this.spinner.show();
    setTimeout(() => {
      this.stopSpinner();
    }, 1000)
  }
  stopSpinner(){
    this.spinner.hide();
  }
}
